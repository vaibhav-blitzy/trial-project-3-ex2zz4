apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway
  namespace: default
  labels:
    app: api-gateway
    component: backend
    part-of: task-management-system
    version: 1.0.0
  annotations:
    kubernetes.io/change-cause: "Initial deployment of API Gateway"
    prometheus.io/scrape: "true"
    prometheus.io/port: "3000"
    prometheus.io/path: "/metrics"

spec:
  # Production configuration for replicas, can be overridden per environment
  replicas: 3

  selector:
    matchLabels:
      app: api-gateway

  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0

  template:
    metadata:
      labels:
        app: api-gateway
        component: backend
        version: 1.0.0
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3000"
        prometheus.io/path: "/metrics"

    spec:
      # Security context for the pod
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 2000

      containers:
        - name: api-gateway
          image: task-management/api-gateway:latest
          imagePullPolicy: Always
          
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
            - name: metrics
              containerPort: 9090
              protocol: TCP

          # Resource limits as per container specifications
          resources:
            requests:
              cpu: "500m"
              memory: "512Mi"
            limits:
              cpu: "2"
              memory: "4Gi"

          # Health checking
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3

          readinessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: 15
            periodSeconds: 5
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 3

          startupProbe:
            httpGet:
              path: /startup
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
            failureThreshold: 30

          # Environment variables
          env:
            - name: NODE_ENV
              valueFrom:
                configMapKeyRef:
                  name: api-gateway-config
                  key: NODE_ENV
            - name: API_PORT
              valueFrom:
                configMapKeyRef:
                  name: api-gateway-config
                  key: API_PORT
            - name: LOG_LEVEL
              valueFrom:
                configMapKeyRef:
                  name: api-gateway-config
                  key: LOG_LEVEL
            - name: METRICS_PORT
              valueFrom:
                configMapKeyRef:
                  name: api-gateway-config
                  key: METRICS_PORT
            - name: RATE_LIMIT_WINDOW
              valueFrom:
                configMapKeyRef:
                  name: api-gateway-config
                  key: RATE_LIMIT_WINDOW
            - name: RATE_LIMIT_MAX_REQUESTS
              valueFrom:
                configMapKeyRef:
                  name: api-gateway-config
                  key: RATE_LIMIT_MAX_REQUESTS

          # Volume mounts for configurations
          volumeMounts:
            - name: config-volume
              mountPath: /app/config
              readOnly: true
            - name: secrets-volume
              mountPath: /app/secrets
              readOnly: true

      # Pod anti-affinity for high availability
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - api-gateway
                topologyKey: kubernetes.io/hostname

      # Volumes definition
      volumes:
        - name: config-volume
          configMap:
            name: api-gateway-config
        - name: secrets-volume
          secret:
            secretName: api-gateway-secrets

      # Service account for the pod
      serviceAccountName: api-gateway-sa

      # Pod termination grace period
      terminationGracePeriodSeconds: 60

      # Image pull secrets if using private registry
      imagePullSecrets:
        - name: registry-credentials