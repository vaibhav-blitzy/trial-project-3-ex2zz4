apiVersion: apps/v1
kind: Deployment
metadata:
  name: file-service
  namespace: default
  labels:
    app: file-service
    component: backend
    part-of: task-management-system
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "3004"
    prometheus.io/path: "/metrics"
spec:
  replicas: 3
  selector:
    matchLabels:
      app: file-service
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: file-service
      annotations:
        checksum/config: "${CONFIG_CHECKSUM}"
        checksum/secrets: "${SECRETS_CHECKSUM}"
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        runAsNonRoot: true
      containers:
        - name: file-service
          image: task-management/file-service:latest
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 3004
              protocol: TCP
            - name: metrics
              containerPort: 9090
              protocol: TCP
          env:
            - name: NODE_ENV
              valueFrom:
                configMapKeyRef:
                  name: task-management-system-config
                  key: NODE_ENV
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: task-management-secrets
                  key: AWS_ACCESS_KEY_ID
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: task-management-secrets
                  key: AWS_SECRET_ACCESS_KEY
            - name: AWS_REGION
              valueFrom:
                secretKeyRef:
                  name: task-management-secrets
                  key: AWS_REGION
            - name: S3_BUCKET_NAME
              valueFrom:
                secretKeyRef:
                  name: task-management-secrets
                  key: S3_BUCKET_NAME
            - name: S3_ENCRYPTION_KEY
              valueFrom:
                secretKeyRef:
                  name: task-management-secrets
                  key: S3_ENCRYPTION_KEY
          resources:
            limits:
              cpu: "1"
              memory: "2Gi"
            requests:
              cpu: "500m"
              memory: "1Gi"
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 15
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: 15
            periodSeconds: 10
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 3
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: file-storage
              mountPath: /app/storage
              readOnly: false
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
      volumes:
        - name: tmp
          emptyDir: {}
        - name: file-storage
          emptyDir: {}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - file-service
                topologyKey: kubernetes.io/hostname
      tolerations:
        - key: "node.kubernetes.io/not-ready"
          operator: "Exists"
          effect: "NoExecute"
          tolerationSeconds: 300
        - key: "node.kubernetes.io/unreachable"
          operator: "Exists"
          effect: "NoExecute"
          tolerationSeconds: 300