apiVersion: apps/v1
kind: Deployment
metadata:
  name: project-service
  namespace: default
  labels:
    app: project-service
    component: backend
    part-of: task-management-system
    environment: ${ENV}
    version: ${VERSION}
  annotations:
    kubernetes.io/change-cause: "Initial deployment"
    prometheus.io/scrape: "true"
    prometheus.io/port: "3000"
    prometheus.io/path: "/metrics"

spec:
  replicas: 3
  selector:
    matchLabels:
      app: project-service
  
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0

  template:
    metadata:
      labels:
        app: project-service
        environment: ${ENV}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3000"
        prometheus.io/path: "/metrics"
        checksum/config: ${CONFIG_CHECKSUM}

    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 2000

      containers:
      - name: project-service
        image: task-management/project-service:${VERSION}
        imagePullPolicy: Always
        
        ports:
        - containerPort: 3000
          protocol: TCP
          name: http
        - containerPort: 9090
          protocol: TCP
          name: metrics

        env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: project-service-config
              key: NODE_ENV
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: project-service-config
              key: LOG_LEVEL
        - name: SERVICE_PORT
          value: "3000"
        - name: METRICS_PORT
          value: "9090"
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: project-service-config
              key: DB_HOST
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              name: project-service-config
              key: DB_PORT
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              name: project-service-config
              key: DB_NAME
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: project-service-secrets
              key: DB_USER
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: project-service-secrets
              key: DB_PASSWORD
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: project-service-config
              key: REDIS_HOST
        - name: REDIS_PORT
          valueFrom:
            configMapKeyRef:
              name: project-service-config
              key: REDIS_PORT
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: project-service-secrets
              key: REDIS_PASSWORD
        - name: APM_SERVICE_NAME
          value: "project-service"
        - name: APM_SERVER_URL
          valueFrom:
            configMapKeyRef:
              name: project-service-config
              key: APM_SERVER_URL
        - name: TRACING_ENABLED
          valueFrom:
            configMapKeyRef:
              name: project-service-config
              key: TRACING_ENABLED

        resources:
          requests:
            cpu: "500m"
            memory: "512Mi"
          limits:
            cpu: "2"
            memory: "4Gi"

        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3

        readinessProbe:
          httpGet:
            path: /ready
            port: 3000
          initialDelaySeconds: 15
          periodSeconds: 5
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 3

        startupProbe:
          httpGet:
            path: /startup
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
          failureThreshold: 30

      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - project-service
              topologyKey: kubernetes.io/hostname

      terminationGracePeriodSeconds: 60