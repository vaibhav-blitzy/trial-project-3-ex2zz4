apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: aws-secret-store
  namespace: task-management
  labels:
    app.kubernetes.io/name: secret-store
    app.kubernetes.io/component: security
    security.compliance/level: high
  annotations:
    secret.store/rotation-schedule: "168h"  # 7-day rotation
    secret.store/audit-logging: "enabled"
    secret.store/compliance-level: "high"
spec:
  provider:
    aws:
      service: SecretsManager
      region: ${AWS_REGION}
      auth:
        secretRef:
          accessKeyIDSecretRef:
            name: aws-secret-store-credentials
            key: access-key-id
          secretAccessKeySecretRef:
            name: aws-secret-store-credentials
            key: secret-access-key
      encryption:
        type: kms
        kmsKeyId: ${KMS_KEY_ID}
        algorithm: AES_256_GCM
        keyRotation: enabled
      replication:
        enabled: true
        regions:
          - ${DR_REGION}

  retrySettings:
    maxRetries: 5
    retryInterval: "30s"
    backoffMultiplier: 1.5

  refreshInterval: "1h"

  conditions:
    - type: Ready
      status: "True"
      reason: StoreReady
      message: "Secret store is configured and ready"
    - type: EncryptionConfigured
      status: "True"
      reason: KMSEnabled
      message: "KMS encryption is properly configured"

  securityContext:
    runAsNonRoot: true
    runAsUser: 1000
    fsGroup: 1000
    readOnlyRootFilesystem: true
    allowPrivilegeEscalation: false
    capabilities:
      drop:
        - ALL

  # Network policy reference for access control
  networkPolicy:
    matchLabels:
      app.kubernetes.io/name: secret-store
    policyRef:
      name: default-deny-all
      namespace: task-management

  # Pod security policy reference
  podSecurityPolicy:
    policyRef:
      name: restricted-pods
      namespace: task-management