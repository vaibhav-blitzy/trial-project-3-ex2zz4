# Kubernetes API version: v1.25+
# Purpose: Authentication Service Deployment Configuration
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-service
  namespace: default
  labels:
    app: task-management
    service: auth
    version: 1.0.0
    environment: ${ENV}
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "3000"
    prometheus.io/path: "/metrics"
    security.policy/version: "v1"
    deployment.kubernetes.io/revision: "1"

spec:
  # Dynamic replica count based on environment
  replicas: ${ENV == 'production' ? 3 : ENV == 'staging' ? 2 : 1}
  
  selector:
    matchLabels:
      app: task-management
      service: auth

  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0

  template:
    metadata:
      labels:
        app: task-management
        service: auth
      annotations:
        checksum/config: ${CONFIG_CHECKSUM}
        security.alpha.kubernetes.io/sysctls: "net.ipv4.tcp_syncookies=1"
        
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        seccompProfile:
          type: RuntimeDefault

      containers:
      - name: auth-service
        image: auth-service:${VERSION}
        imagePullPolicy: Always
        
        ports:
        - name: http
          containerPort: 3000
          protocol: TCP
        - name: metrics
          containerPort: 9090
          protocol: TCP

        resources:
          requests:
            cpu: "500m"
            memory: "1Gi"
          limits:
            cpu: "1"
            memory: "2Gi"

        env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: auth-service-config
              key: NODE_ENV
        - name: PORT
          value: "3000"
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: auth-service-config
              key: LOG_LEVEL
        - name: JWT_EXPIRY
          valueFrom:
            configMapKeyRef:
              name: auth-service-config
              key: JWT_EXPIRY
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: jwt-secret
              key: JWT_SECRET
        - name: OAUTH_PROVIDER_URL
          valueFrom:
            configMapKeyRef:
              name: auth-service-config
              key: OAUTH_PROVIDER_URL
        - name: OAUTH_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: oauth-credentials
              key: CLIENT_ID
        - name: OAUTH_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: oauth-credentials
              key: CLIENT_SECRET
        - name: MFA_ENABLED
          valueFrom:
            configMapKeyRef:
              name: auth-service-config
              key: MFA_ENABLED
        - name: MFA_SECRET
          valueFrom:
            secretKeyRef:
              name: mfa-secret
              key: MFA_KEY

        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3

        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 20
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3

        startupProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 2
          failureThreshold: 30

        volumeMounts:
        - name: config-volume
          mountPath: /app/config
          readOnly: true
        - name: tmp-volume
          mountPath: /tmp
          readOnly: false

      volumes:
      - name: config-volume
        configMap:
          name: auth-service-config
      - name: tmp-volume
        emptyDir: {}

      serviceAccountName: auth-service-sa
      terminationGracePeriodSeconds: 60
      
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: service
                  operator: In
                  values:
                  - auth
              topologyKey: kubernetes.io/hostname

      tolerations:
      - key: "node.kubernetes.io/not-ready"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 300
      - key: "node.kubernetes.io/unreachable"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 300