# Kubernetes NetworkPolicy manifest v1
# Version: networking.k8s.io/v1
# Purpose: Define comprehensive network security and isolation rules for Task Management System

---
# Default deny-all policy implementing zero-trust baseline
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: default-deny-all
  namespace: task-management
  labels:
    app: task-management
    component: network-policy
    tier: security
spec:
  podSelector: {}  # Applies to all pods in namespace
  policyTypes:
    - Ingress
    - Egress
---
# API Gateway network policy with strict access controls
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: api-gateway-policy
  namespace: task-management
  labels:
    app: task-management
    component: network-policy
    tier: security
spec:
  podSelector:
    matchLabels:
      app: api-gateway
      component: gateway
      tier: frontend
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - ipBlock:
            cidr: 0.0.0.0/0
            except:
              - 10.0.0.0/8     # Private network exclusion
              - 172.16.0.0/12  # Private network exclusion
              - 192.168.0.0/16 # Private network exclusion
      ports:
        - protocol: TCP
          port: 3000  # Application port
        - protocol: TCP
          port: 443   # HTTPS port
  egress:
    - to:
        - namespaceSelector:
            matchLabels:
              name: task-management
          podSelector:
            matchLabels:
              app: task-management
      ports:
        - protocol: TCP
          port: 3000
---
# Service-to-service communication policy within task-management namespace
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: service-to-service-policy
  namespace: task-management
  labels:
    app: task-management
    component: network-policy
    tier: security
spec:
  podSelector:
    matchLabels:
      app: task-management
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - podSelector:
            matchLabels:
              app: api-gateway
        - podSelector:
            matchLabels:
              app: task-management
      ports:
        - protocol: TCP
          port: 3000
  egress:
    - to:
        - podSelector:
            matchLabels:
              app: task-management
      ports:
        - protocol: TCP
          port: 3000